@mixin sizefont($actual-size) {
	font-size: ($actual-size/$base-size)*1em;
}

@mixin color-placeholder($placeholder-color) {
	color: $placeholder-color;
}

@mixin linear-gradient($direction, $color-stops...) {
	background: linear-gradient($direction, $color-stops);
}

@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
    font-family: $family;
    @if $size { font-size: $size; }
    @if $colour { color: $colour; }
    @if $weight { font-weight: $weight; }
    @if $lh { line-height: $lh; }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin background-style($positionx: center, $positiony: center, $size: cover, $repeat: no-repeat){
  background-position-x: $positionx;
  background-position-y: $positiony;
  background-size: $size;
  background-repeat: $repeat;
}

@mixin padding-generator($padding-top: null, $padding-right: null, $padding-bottom: null, $padding-left: null){
  @if $padding-top{ padding-top: $padding-top; }
  @if $padding-right{ padding-right: $padding-right; }
  @if $padding-bottom{ padding-bottom: $padding-bottom; }
  @if $padding-left{ padding-left: $padding-left; }
}

@function photoshop-unit-convertsion($unit, $return: 'em', $base: '16') {
  @if $return = 'em' {
    @return ($unit) / 1000;
  } @else {
    @return ($unit * $base) / 1000;
  }
}